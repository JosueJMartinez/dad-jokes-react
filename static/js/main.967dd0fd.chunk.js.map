{"version":3,"sources":["js/components/Joke.jsx","js/components/JokeList.jsx","js/App.js","serviceWorker.js","index.js"],"names":["Joke","handleClick","e","setRating","target","className","direction","rating","props","joke","editRating","handleMood","color","emoji","this","id","emotion","onClick","style","borderColor","ariarole","arialabel","Component","JokeList","state","jokes","isLoading","getJokes","a","res","jokeFunc","seenJokes","has","add","setState","length","numJokesToGet","Axios","get","headers","accept","undefined","data","Error","push","prevState","console","log","j","map","Set","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","src","alt","sort","joke1","joke2","key","defaultProps","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.967dd0fd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../../css/Joke.css';\r\n\r\nexport default class Joke extends Component {\r\n\thandleClick = e => {\r\n\t\tthis.setRating(e.target.className);\r\n\t};\r\n\r\n\tsetRating = direction => {\r\n\t\tlet rating = this.props.joke.rating;\r\n\t\tif (direction === 'fas fa-arrow-up')\r\n\t\t\tthis.props.editRating({\r\n\t\t\t\t...this.props.joke,\r\n\t\t\t\trating: ++rating\r\n\t\t\t});\r\n\t\telse\r\n\t\t\tthis.props.editRating({\r\n\t\t\t\t...this.props.joke,\r\n\t\t\t\trating: --rating\r\n\t\t\t});\r\n\t};\r\n\r\n\thandleMood = () => {\r\n\t\tconst { rating } = this.props.joke;\r\n\t\tif (rating < -10) return { color: '#ff0000', emoji: 'em em-triumph' };\r\n\t\tif (rating >= -10 && rating <= -8)\r\n\t\t\treturn { color: '#f44336', emoji: 'em em-angry' };\r\n\t\tif (rating >= -7 && rating <= -5)\r\n\t\t\treturn { color: '#ff9800', emoji: 'em em-unamused' };\r\n\t\tif (rating >= -4 && rating <= -2)\r\n\t\t\treturn { color: '#ffc107', emoji: 'em em-confused' };\r\n\t\tif (rating >= -1 && rating <= 1)\r\n\t\t\treturn { color: '#ffeb3b', emoji: 'em em-neutral_face' };\r\n\t\tif (rating >= 2 && rating <= 4)\r\n\t\t\treturn { color: 'cddc39', emoji: 'em em-slightly_smiling_face' };\r\n\t\tif (rating >= 5 && rating <= 7)\r\n\t\t\treturn { color: '#8bc34a', emoji: 'em em-smiley' };\r\n\t\tif (rating >= 8 && rating <= 10)\r\n\t\t\treturn { color: '#4caf50', emoji: 'em em-laughing' };\r\n\t\tif (rating > 10)\r\n\t\t\treturn {\r\n\t\t\t\tcolor: '#00ff00',\r\n\t\t\t\temoji: 'em em-rolling_on_the_floor_laughing'\r\n\t\t\t};\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { id, joke, rating } = this.props.joke;\r\n\t\tconst emotion = this.handleMood();\r\n\t\treturn (\r\n\t\t\t<div className=\"Joke\" id={id}>\r\n\t\t\t\t<div className=\"Joke-buttons\">\r\n\t\t\t\t\t<i onClick={this.handleClick} className=\"fas fa-arrow-up\" />\r\n\t\t\t\t\t<span style={{ borderColor: emotion.color }}>{rating}</span>\r\n\t\t\t\t\t<i onClick={this.handleClick} className=\"fas fa-arrow-down\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"Joke-content\">{joke}</div>\r\n\t\t\t\t<div className=\"Joke-mood\">\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName={emotion.emoji}\r\n\t\t\t\t\t\tariarole=\"presentation\"\r\n\t\t\t\t\t\tarialabel=\"ROLLING ON THE FLOOR LAUGHING\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport '../../css/JokeList.css';\r\nimport Joke from './Joke';\r\n\r\nexport default class JokeList extends Component {\r\n\tstatic defaultProps = {\r\n\t\tnumJokesToGet: 10\r\n\t};\r\n\r\n\tstate = {\r\n\t\tjokes: [],\r\n\t\tisLoading: true\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.seenJokes = new Set();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst jokes = JSON.parse(localStorage.getItem('DadJokes'));\r\n\t\tjokes\r\n\t\t\t? this.setState({ jokes: jokes, isLoading: false }, () => {\r\n\t\t\t\t\tthis.seenJokes = new Set(this.state.jokes.map(j => j.id));\r\n\t\t\t\t})\r\n\t\t\t: this.getJokes();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tlocalStorage.setItem('DadJokes', JSON.stringify(this.state.jokes));\r\n\t}\r\n\r\n\tgetJokes = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = {};\r\n\t\t\tlet foundJoke = false;\r\n\t\t\tconst jokes = [];\r\n\r\n\t\t\tlet jokeFunc = id => {\r\n\t\t\t\tif (!this.seenJokes.has(id)) {\r\n\t\t\t\t\tthis.seenJokes.add(id);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t};\r\n\r\n\t\t\tthis.setState({ isLoading: true });\r\n\r\n\t\t\twhile (jokes.length < this.props.numJokesToGet) {\r\n\t\t\t\tres = await Axios.get('https://icanhazdadjoke.com/', {\r\n\t\t\t\t\theaders: { accept: 'application/json' }\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (res.data === undefined)\r\n\t\t\t\t\tthrow new Error('failed retrieving data');\r\n\r\n\t\t\t\tfoundJoke = jokeFunc(res.data.id);\r\n\t\t\t\tif (!foundJoke) {\r\n\t\t\t\t\tjokes.push({ ...res.data, rating: 0 });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState(prevState => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tjokes: [ ...prevState.jokes, ...jokes ],\r\n\t\t\t\t\tisLoading: false\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('erroro here');\r\n\t\t\tthis.setState({ isLoading: false });\r\n\t\t}\r\n\t};\r\n\r\n\thandleClick = e => {\r\n\t\tthis.getJokes();\r\n\t};\r\n\r\n\teditRating = j => {\r\n\t\tthis.setState({\r\n\t\t\tjokes: this.state.jokes.map(joke => {\r\n\t\t\t\tif (j.id === joke.id) return j;\r\n\t\t\t\treturn joke;\r\n\t\t\t})\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"JokeList\">\r\n\t\t\t\t<div className=\"JokeList-sidebar\">\r\n\t\t\t\t\t<h1 className=\"JokeList-title\">\r\n\t\t\t\t\t\tDad <span>Jokes</span>\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\"\r\n\t\t\t\t\t\talt=\"laughing face\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={this.handleClick}>New Jokes</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"JokeList-jokes\">\r\n\t\t\t\t\t{this.state.isLoading ? (\r\n\t\t\t\t\t\t<div className=\"JokeList-spinner\">\r\n\t\t\t\t\t\t\t<i className=\"far fa-8x fa-laugh fa-spin\" />\r\n\t\t\t\t\t\t\t<h1 className=\"JokeList-title\">Loading...</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tthis.state.jokes\r\n\t\t\t\t\t\t\t.sort((joke1, joke2) => joke2.rating - joke1.rating)\r\n\t\t\t\t\t\t\t.map(joke => (\r\n\t\t\t\t\t\t\t\t<Joke\r\n\t\t\t\t\t\t\t\t\tkey={joke.id}\r\n\t\t\t\t\t\t\t\t\tjoke={joke}\r\n\t\t\t\t\t\t\t\t\teditRating={this.editRating}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport '../css/App.css';\r\nimport JokeList from './components/JokeList';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<JokeList />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './js/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}